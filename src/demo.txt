Demo 2/3/24
This week we completed:
    -   Configure AWS authentication
    -   list, create, and delete groups
    -   list, create, and delete users
    -   Created API Endpoint with AWS API Gateway


Next week:
    -   Create REST API using AWS Lambda (Tyler)
        - How does authentication work with single sign on? (Later)
        - Finish each API (Get, list, delete, etc.) (Later)

    - One Resource on Gateway (Both)
        - One for Users (Ritika), One for Groups (Tyler)
        Users
            - List, Create, etc.
            - Create Lambda
        Groups
            -̶ ̶L̶i̶s̶t̶,̶ ̶C̶r̶e̶a̶t̶e̶,̶ ̶e̶t̶c̶.̶
            - Create Lambda

        - Search REST API best practices 
            /groups GET ( List Groups) POST ( Create Group) /groups?id=xxxxxxxx GET Retuurn Group Metadata PUT PATCH DELETE /users GET ( List Users) POST ( Create User) /users?id=xxxxxxxx GET Retuurn User Metadata PUT PATCH DELETE
    - ̶v̶i̶r̶t̶u̶a̶l̶ ̶e̶n̶v̶ ̶(̶T̶y̶l̶e̶r̶)̶
        - M̶a̶k̶e̶ ̶v̶e̶n̶v̶ ̶p̶a̶r̶t̶ ̶o̶f̶ ̶d̶o̶c̶u̶m̶e̶n̶t̶a̶t̶i̶o̶n̶.̶ ̶
    - lambda authorizer https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html (Ritika)
    - READ Secrets AWS (Both)
    - Replace this doc with strawman (Ritika)
        

Demo 2/10/24
    -   Concerns
        - Can this much data be sent in a REST request